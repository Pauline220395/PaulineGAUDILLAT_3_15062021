@charset "UTF-8";
@font-face {
  font-family: "Shrikhand";
  src: url("../fonts/Shrikhand/Shrikhand-Regular.ttf");
  font-family: "Roboto";
  src: url("../fonts/Roboto/Roboto-Black.ttf");
  src: url("../fonts/Roboto/Roboto-Bold.ttf");
  src: url("../fonts/Roboto/Roboto-Medium.ttf");
  src: url("../fonts/Roboto/Roboto-Light.ttf");
  src: url("../fonts/Roboto/Roboto-Regular.ttf");
}
body {
  font-family: "Roboto";
  margin: 0 0 0 0;
}

@-webkit-keyframes loader {
  100% {
    opacity: 0;
    z-index: -5;
  }
}

@keyframes loader {
  100% {
    opacity: 0;
    z-index: -5;
  }
}
.loader {
  -webkit-animation: loader 1s;
          animation: loader 1s;
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
  position: fixed;
  height: 100%;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.8);
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: center;
}

.loading {
  color: #9356DC, #AE5FDC, #C968DB, #E470DB, #FF79DA;
  display: flex;
}
.loading .dot {
  position: relative;
  width: 25px;
  height: 25px;
  margin: 8px;
  border-radius: 50%;
  /*@for = faire une boucle - @for évalue un bloc un nombre de fois précisé lors de la création de la règle*/
  /*@for = faire une boucle - @for évalue un bloc un nombre de fois précisé lors de la création de la règle*/
  /*@for = faire une boucle - @for évalue un bloc un nombre de fois précisé lors de la création de la règle*/
  /*@for = faire une boucle - @for évalue un bloc un nombre de fois précisé lors de la création de la règle*/
  /*@for = faire une boucle - @for évalue un bloc un nombre de fois précisé lors de la création de la règle*/
}
.loading .dot::before {
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  background: inherit;
  border-radius: inherit;
  -webkit-animation: wave 2s ease-out infinite;
          animation: wave 2s ease-out infinite;
}
.loading .dot:nth-child(1) {
  background: #9356DC;
}
.loading .dot:nth-child(1)::before {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s;
}
.loading .dot:nth-child(2) {
  background: #AE5FDC;
}
.loading .dot:nth-child(2)::before {
  -webkit-animation-delay: 0.4s;
          animation-delay: 0.4s;
}
.loading .dot:nth-child(3) {
  background: #C968DB;
}
.loading .dot:nth-child(3)::before {
  -webkit-animation-delay: 0.6s;
          animation-delay: 0.6s;
}
.loading .dot:nth-child(4) {
  background: #E470DB;
}
.loading .dot:nth-child(4)::before {
  -webkit-animation-delay: 0.8s;
          animation-delay: 0.8s;
}
.loading .dot:nth-child(5) {
  background: #FF79DA;
}
.loading .dot:nth-child(5)::before {
  -webkit-animation-delay: 1s;
          animation-delay: 1s;
}

/*La pseudo-classe :nth-child(an+b) permet de cibler un élément qui possède an+b-1 éléments voisins (au même niveau) 
avant lui dans l'arbre du document pour des valeurs entières n et qui possède un élément parent. 
Autrement dit, un sélecteur utilisant cette pseudo-classe permettra de cibler les éléments fils d'un élément 
dont les positions correspondent au motif an+b.*/
@-webkit-keyframes wave {
  50%, 75% {
    transform: scale(2.5);
  }
  80%, 100% {
    opacity: 0;
  }
}
@keyframes wave {
  50%, 75% {
    transform: scale(2.5);
  }
  80%, 100% {
    opacity: 0;
  }
}
header {
  padding: 2rem 3rem;
  /*1rem = environ 16px - 1em = 100% de la taille de base du navigateur*/
}

#logo {
  text-align: center;
}

#section-1 {
  text-align: center;
  background-color: #f6f6f6;
}
#section-1 h1 {
  margin: 2rem 0;
  font-weight: 900;
  font-size: 28px;
}
#section-1 h2 {
  margin: 0 0 2rem 0;
  font-size: 20px;
  font-weight: lighter;
}

.localisation {
  background-color: #eaeaea;
  padding: 1.3rem 0;
  box-shadow: inset 0px 2px 7px #dfdfdf;
  font-weight: bold;
  color: #353535;
  font-size: 20px;
}
.localisation i {
  padding-right: 1.5rem;
  font-size: 20px;
  color: #353535;
}

.btn {
  border-radius: 3rem;
  background: linear-gradient(#FF79DA, #9356DC);
  color: white;
  font-weight: bold;
  padding: 1rem 1.5rem;
  font-size: 17px;
  border: none;
  margin-bottom: 3rem;
  position: relative;
  z-index: 1;
  box-shadow: 0px 3px 15px #dfdfdf;
}
.btn:hover::after {
  opacity: 0.15;
}
.btn::after {
  content: "";
  /*La propriété "content" nous permet de remplir un pseudoélément de texte ou d’images, mais dans le cas de notre bouton, nous ne voulons pas y ajouter de contenu. 
  Nous voulons plutôt que ::after agisse comme un fond de couleur.*/
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: white;
  /* hover blanc*/
  opacity: 0;
  z-index: -1;
  transition: opacity 250ms;
  box-shadow: 0px 3px 15px black;
  border-radius: 3rem;
}
.btn a {
  color: white;
  text-decoration: none;
}

/*L’ajout des éléments ::before ou ::after crée un élément enfant à chaque fois que son sélecteur a été assigné. 
L’élément créé par ::before sera le premier enfant de l’élément, et celui créé par ::after sera le dernier*/
#fonctionnement-section {
  margin: 3rem 11%;
}
#fonctionnement-section h2 {
  font-weight: bold;
  margin-left: 0;
  margin-bottom: 2rem;
}

.fonctionnement {
  display: flex;
  justify-content: center;
  align-items: center;
}

.etiquettes {
  display: flex;
  align-items: center;
  width: 60%;
  margin: 0 1.5rem;
  position: relative;
}

.number {
  background-color: #9356DC;
  padding: 5px 10px 5px 10px;
  color: white;
  border-radius: 100%;
  position: absolute;
  z-index: 2;
  margin: -15px;
}

.block {
  display: flex;
  align-items: center;
  border-radius: 1.5rem;
  padding: 1rem;
  width: 100%;
  box-shadow: 0px 2px 15px #dfdfdf;
  /* 1 décalage horizontal - 2 vertical - 3 adoucicement - 4 couleur*/
  z-index: 1;
  position: relative;
}
.block:hover::before {
  opacity: 0.25;
}
.block::before {
  /* hover violet : couleur primaire éclaircie*/
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #a16be0;
  opacity: 0;
  z-index: -1;
  transition: opacity 250ms;
  border-radius: 1.5rem;
  box-shadow: 0px 4px 15px #9356DC;
}
.block i {
  color: #7e7e7e;
}
.block p {
  font-weight: bold;
}

.mobile {
  padding: 0 22px 0 25px;
  font-size: 22px;
}

.list {
  padding: 0 22px;
  font-size: 20px;
}

.store {
  padding: 0 22px;
  font-size: 19px;
}

#Restaurants {
  background-color: #f6f6f6;
  padding: 2rem 0;
}
#Restaurants h2 {
  margin: 2rem 11%;
}

.restaurant-box {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 0 9%;
}

.restaurants-cards {
  background-color: white;
  width: 45%;
  height: 250px;
  border-radius: 2rem;
  box-shadow: 0 2px 20px #dfdfdf;
  margin: auto;
  margin-bottom: 2rem;
  padding-bottom: 5px;
}
.restaurants-cards a {
  text-decoration: none;
}

/*Pour les éléments qui sont position: absolute, 
propriétés top/right/bottom/left définit la distance entre le bord de la marge de l'élément et le bord haut du bloc englobant. 
(il faut que le bloc englobant ait position: relative).*/
.new-box {
  position: relative;
  /*bloc englobant*/
  margin: 0;
}

.new {
  position: absolute;
  /*élément absolute*/
  background-color: #99E2D0;
  color: #008766;
  border-radius: 2px;
  font-size: 18px;
  top: 20px;
  right: 20px;
  padding: 5px 8px;
  font-weight: bold;
}

.restaurants-cards img {
  width: 100%;
  height: 10rem;
  -o-object-fit: cover;
     object-fit: cover;
  border-top-left-radius: 1.5rem;
  border-top-right-radius: 1.5rem;
}

.description-cards {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.text-cards {
  flex-direction: column;
  align-items: center;
  margin: 0.8rem 0 0 1.5rem;
}
.text-cards h3 {
  font-size: 23px;
  color: black;
  width: 100%;
  margin: 0 0 5px 0;
}
.text-cards p {
  font-size: 20px;
  color: black;
  margin: 0;
}

.fav {
  position: relative;
  /*bloc englobant*/
  margin: 15px 40px 0 0;
}
.fav i {
  color: #7e7e7e;
  font-size: 30px;
}
.fav .full-heart {
  position: absolute;
  /*élément absolute*/
  left: 0;
  /* a 0-left du bloc englobant*/
  opacity: 0;
}
.fav .full-heart:hover {
  background: linear-gradient(to top, #9356DC, #FF79DA);
  -webkit-background-clip: text;
          background-clip: text;
  color: transparent;
  opacity: 1;
  transition: 0.9s ease;
}
.fav .empty-heart:hover {
  opacity: 0;
}

#footer-box {
  background-color: #353535;
  padding-top: 2rem;
}

.ohmyfood {
  font-family: "Shrikhand";
  font-size: 26px;
  color: white;
  margin-left: 11%;
}

.footer-text {
  margin-left: 11%;
  color: white;
  padding: 1.5rem 0;
  line-height: 200%;
  font-size: 20px;
}
.footer-text a {
  text-decoration: none;
  color: white;
}
.footer-text a:hover {
  text-decoration: underline;
}

.footer-block {
  display: flex;
}

.utensils {
  padding: 0 25px 0 5px;
}

.hands {
  padding-right: 20px;
}

/*-----------------------Media Tablette et Smartphone----------------------*/
@media all and (max-width: 1300px) {
  .titles-box {
    margin: 0 2rem;
  }

  #fonctionnement-section {
    margin: 3rem 2rem;
  }
  #fonctionnement-section h2 {
    margin-left: -10px;
  }

  .fonctionnement {
    flex-direction: column;
    margin: 0 0 0 10px;
  }

  .etiquettes {
    width: 100%;
    margin-bottom: 20px;
  }

  .restaurant-box {
    flex-direction: column;
    margin: 0 1.5rem;
  }

  #Restaurants h2 {
    margin: 2rem 1.5rem;
  }

  .restaurants-cards {
    width: 100%;
  }
}
/*-----------------------Média small-smartphone----------------------*/
@media all and (max-width: 330px) {
  .text-cards h3 {
    font-size: 18px;
  }

  .text-cards p {
    font-size: 16px;
  }
}/*# sourceMappingURL=styles.css.map */